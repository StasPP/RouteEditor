unit URegions;

interface

 function GetRegion(L, B: Double):String;

 var
   RegionsNames : array[0..63] of String;

implementation

 const Regions :array [0..647] of Byte = (0, 0, 0,
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 
     4, 35, 35, 35, 0, 0, 0, 0, 2, 2, 2, 26, 
     26, 26, 2, 2, 2, 2, 2, 0, 0, 3, 24, 24, 
     24, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 
     5, 5, 35, 20, 20, 20, 28, 28, 28, 27, 26, 26, 
     26, 26, 3, 3, 3, 3, 3, 3, 3, 24, 24, 24, 
     34, 1, 1, 1, 1, 1, 1, 1, 1, 12, 35, 35, 
     35, 35, 19, 8, 21, 9, 28, 28, 28, 27, 26, 26, 
     26, 26, 3, 3, 3, 3, 3, 3, 34, 34, 34, 34, 
     34, 34, 12, 12, 12, 12, 12, 12, 12, 12, 35, 35, 
     35, 35, 8, 8, 21, 9, 9, 28, 10, 10, 10, 6, 
     25, 25, 6, 6, 3, 29, 3, 34, 34, 34, 34, 34, 
     34, 34, 12, 12, 12, 12, 12, 12, 35, 35, 35, 35, 
     35, 35, 8, 16, 22, 22, 38, 38, 10, 10, 7, 6, 
     6, 6, 6, 30, 29, 34, 34, 34, 34, 34, 34, 34, 
     34, 34, 34, 12, 12, 13, 13, 13, 13, 35, 35, 35, 
     35, 16, 16, 16, 16, 16, 16, 23, 23, 10, 7, 7, 
     11, 11, 11, 11, 34, 34, 34, 34, 34, 34, 34, 34, 
     34, 34, 34, 34, 12, 13, 13, 13, 13, 35, 35, 35, 
     35, 16, 16, 16, 16, 16, 16, 23, 23, 36, 7, 7,
     11, 11, 11, 11, 34, 34, 34, 34, 34, 34, 34, 34, 
     34, 34, 34, 34, 34, 34, 18, 14, 14, 14, 35, 35,
     35, 17, 17, 17, 17, 17, 17, 17, 36, 36, 7, 7, 
     11, 11, 11, 11, 34, 34, 34, 34, 33, 34, 34, 34, 
     34, 34, 34, 34, 34, 34, 14, 14, 14, 14, 14, 14, 
     35, 35, 35, 35, 17, 17, 17, 17, 36, 36, 36, 36, 
     36, 11, 11, 11, 11, 11, 11, 34, 33, 33, 34, 33, 
     33, 34, 34, 34, 34, 34, 34, 14, 14, 14, 14, 14, 
     35, 35, 35, 35, 18, 18, 18, 18, 36, 36, 36, 36, 
     36, 36, 31, 31, 31, 31, 34, 33, 33, 34, 34, 34, 
     34, 34, 34, 34, 34, 34, 34, 14, 14, 14, 14, 35, 
     35, 35, 35, 35, 18, 18, 18, 18, 36, 36, 36, 36, 
     36, 36, 31, 31, 31, 31, 31, 33, 34, 34, 34, 34, 
     34, 34, 34, 34, 34, 34, 34, 14, 14, 14, 35, 35, 
     35, 35, 35, 35, 18, 18, 36, 36, 36, 36, 36, 36, 
     36, 36, 31, 31, 31, 31, 31, 34, 32, 34, 34, 34, 
     34, 34, 34, 34, 34, 34, 34, 14, 14, 35, 35, 35, 
     35, 35, 35, 35, 35, 35, 36, 36, 36, 36, 36, 36, 
     36, 36, 36, 37, 37, 31, 34, 32, 32, 34, 34, 34, 
     34, 34, 34, 34, 34, 34, 34, 14, 14, 35, 35, 35, 
     35, 35, 35, 35, 35, 37, 37, 37, 37, 37, 37, 37, 
     37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 
     37, 37, 37, 37, 37, 37, 37, 37, 15, 15, 37, 37, 
     37, 37, 37, 37, 37, 37, 15, 15, 15, 15, 37, 15, 
     15, 15, 15, 15, 15, 15, 15, 15, 37, 37, 15, 15, 
     15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 
     15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 
     15, 15, 15, 15, 15, 15, 15, 15, 37, 15, 15, 15, 
     15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 
     15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 
     15, 15, 15, 15, 15, 15, 15, 15, 15);

function GetRegion(L, B: Double):String;
var _b, _l, N: Integer;
begin
  result := '-';

  _b := trunc((B + 180)/10);
  _l := trunc((90-L)/10);

  if _b > 36 then
     _b := _b - 36;

  N := _b + _l*36;

  try
    if (N >= 0 )and (N < 648) then
      result := RegionsNames[Regions[N]];
  except
  end;
end;

end.
